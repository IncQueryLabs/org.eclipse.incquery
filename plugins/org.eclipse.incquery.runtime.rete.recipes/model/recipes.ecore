<?xml version="1.0" encoding="UTF-8"?>
<ecore:EPackage xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" name="recipes" nsURI="http://www.eclipse.org/incquery/rete/recipes"
    nsPrefix="recipes">
  <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
    <details key="basePackage" value="org.eclipse.incquery.runtime.rete"/>
  </eAnnotations>
  <eClassifiers xsi:type="ecore:EClass" name="ReteRecipe">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="Container for Rete recipes."/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="recipeNodes" upperBound="-1"
        eType="#//ReteNodeRecipe" containment="true" resolveProxies="false"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="ReteNodeRecipe" abstract="true">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="Abstract base class for model elements that represent &quot;Rete node recipes&quot;,&#xA;that is DTOs that carry information for Rete network construction."/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="traceInfo" unique="false"
        eType="ecore:EDataType ../../org.eclipse.emf.ecore/model/Ecore.ecore#//EString">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Temporary construct for storing traceability information."/>
      </eAnnotations>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="SingleParentNodeRecipe" abstract="true"
      eSuperTypes="#//ReteNodeRecipe">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="Abstract base class for single-parent node recipes."/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="parent" eType="#//ReteNodeRecipe"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="AlphaRecipe" abstract="true" eSuperTypes="#//SingleParentNodeRecipe">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="Abstract base class for alpha node recipes."/>
    </eAnnotations>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="ProjectionIndexer" eSuperTypes="#//SingleParentNodeRecipe">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="Represents helper nodes that provide projection indexing for Beta nodes."/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="mask" eType="#//Mask" containment="true"
        resolveProxies="false"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="BetaRecipe" abstract="true" eSuperTypes="#//ReteNodeRecipe">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="Abstract base class for Beta node recipes."/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="leftParent" eType="#//ProjectionIndexer"
        containment="true" resolveProxies="false"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="rightParent" eType="#//ProjectionIndexer"
        containment="true" resolveProxies="false"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Mask">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="A mask defines the set of tuple variables that need to be taken into consideration for operations."/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="sourceIndices" unique="false"
        upperBound="-1" eType="#//Index">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="The indices that are relevant for tuple operations."/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="sourceArity" unique="false"
        eType="ecore:EDataType ../../org.eclipse.emf.ecore/model/Ecore.ecore#//EInt">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="The arity of tuples."/>
      </eAnnotations>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EDataType" name="Index" instanceClassName="java.lang.Integer">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="Indexes tell which variable of tuples are relevant for a given operation.&#xA;TODO: is this necessary at all?"/>
    </eAnnotations>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="StringIndexMapEntry" instanceClassName="java.util.Map$Entry">
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="key" unique="false" eType="ecore:EDataType ../../org.eclipse.emf.ecore/model/Ecore.ecore#//EString"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="value" unique="false" eType="#//Index"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="InputRecipe" abstract="true" eSuperTypes="#//ReteNodeRecipe">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="Represents input nodes for the Rete network, i.e. nodes&#xA;that generate input tuples for processing."/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="typeIdentifier" unique="false"
        eType="ecore:EDataType ../../org.eclipse.emf.ecore/model/Ecore.ecore#//EString">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Temporary construct for identifying types.&#xA;TODO improve type references"/>
      </eAnnotations>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="UnaryInputRecipe" eSuperTypes="#//InputRecipe"/>
  <eClassifiers xsi:type="ecore:EClass" name="BinaryInputRecipe" eSuperTypes="#//InputRecipe"/>
  <eClassifiers xsi:type="ecore:EClass" name="UniquenessEnforcerRecipe" eSuperTypes="#//ReteNodeRecipe">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="Represents nodes that enforce tuple uniqueness, i.e. filter out&#xA;duplicate input tuples for output."/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="parents" upperBound="-1"
        eType="#//ReteNodeRecipe"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="ProductionRecipe" eSuperTypes="#//UniquenessEnforcerRecipe">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="The production node represents the output of the Rete network,&#xA;from which the results of a query can be read."/>
    </eAnnotations>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="ConstantRecipe" eSuperTypes="#//ReteNodeRecipe">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="Simple node that stores constant values."/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="constantValues" unique="false"
        upperBound="-1" eType="ecore:EDataType ../../org.eclipse.emf.ecore/model/Ecore.ecore#//EJavaObject">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Stores constant values. May be empty.&#xA;&#xA;TODO store constants as strings instead? (for easier serialization)"/>
      </eAnnotations>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="FilterRecipe" abstract="true" eSuperTypes="#//AlphaRecipe">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="Abstract base class for nodes that implement filtering operations."/>
    </eAnnotations>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="InequalityFilterRecipe" eSuperTypes="#//FilterRecipe">
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="subject" unique="false"
        eType="#//Index"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="inequals" unique="false"
        upperBound="-1" eType="#//Index"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="EqualityFilterRecipe" eSuperTypes="#//FilterRecipe">
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="indices" unique="false"
        upperBound="-1" eType="#//Index"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="TrimmerRecipe" eSuperTypes="#//AlphaRecipe">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="Implements projection without uniqueness checking."/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="mask" eType="#//Mask" containment="true"
        resolveProxies="false"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="ExpressionEnforcerRecipe" abstract="true"
      eSuperTypes="#//AlphaRecipe">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="Abstract base class for Rete nodes that evaluate an expression."/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="expression" unique="false"
        eType="ecore:EDataType ../../org.eclipse.emf.ecore/model/Ecore.ecore#//EJavaObject">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Provides traceability to expression representation."/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="mappedIndices" upperBound="-1"
        eType="#//StringIndexMapEntry" containment="true" resolveProxies="false">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="String -> Index map.&#xA;Maps variable names in the expression to tuple indices."/>
      </eAnnotations>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="CheckRecipe" eSuperTypes="#//ExpressionEnforcerRecipe">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="Computes the result of the boolean expression evaluation and&#xA;only passes tuples for which the result is true."/>
    </eAnnotations>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="EvalRecipe" eSuperTypes="#//ExpressionEnforcerRecipe">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="Computes the result of expression evaluation and suffixes the result&#xA;to output tuples as the last element."/>
    </eAnnotations>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="AggregatorRecipe" abstract="true" eSuperTypes="#//AlphaRecipe">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="Represents a (compound) node that performs an aggregation&#xA;operation."/>
    </eAnnotations>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="CountAggregatorRecipe" eSuperTypes="#//AggregatorRecipe">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="The count aggregator node represents a &quot;cound find&quot; operation."/>
    </eAnnotations>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="JoinRecipe" eSuperTypes="#//BetaRecipe">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="The most basic beta operation, the join node performs a join operation over two input tuple sets."/>
    </eAnnotations>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="ExistenceJoinRecipe" abstract="true"
      eSuperTypes="#//BetaRecipe">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="Existence joins are TODO&#xA;&#xA;See http://en.wikipedia.org/wiki/Relational_algebra"/>
    </eAnnotations>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="SemiJoinRecipe" eSuperTypes="#//ExistenceJoinRecipe">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="A semi-join is TODO&#xA;&#xA;See http://en.wikipedia.org/wiki/Relational_algebra"/>
    </eAnnotations>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="AntiJoinRecipe" eSuperTypes="#//ExistenceJoinRecipe">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="An anti-join is TODO&#xA;&#xA;See http://en.wikipedia.org/wiki/Relational_algebra"/>
    </eAnnotations>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="AggregatorJoinRecipe" eSuperTypes="#//BetaRecipe">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="An aggregator join node is a beta node that performs an aggregation operation."/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="aggregator" eType="#//AggregatorRecipe"
        containment="true" resolveProxies="false"/>
  </eClassifiers>
</ecore:EPackage>
